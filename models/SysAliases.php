<?php

/**
 * SysAliases
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class SysAliases extends BaseSysAliases {

	public function setUp() {
		$this->hasOne('SysLanguages as Language', array(
			'local' => 'id_language',
			'foreign' => 'id'));

		$this->hasOne('SysPages as Page', array(
			'local' => 'id_page',
			'foreign' => 'id'));

		$this->hasOne('SysSlugs as Slug', array(
			'local' => 'id_slug',
			'foreign' => 'id'));
	}

	public static function getLocalizedSlug($slug) {
		$page_slug = SysSlugsTable::getInstance()->createQuery('a')
				->where('a.page_url = ?', $slug)
				->fetchOne(null, Doctrine_Core::HYDRATE_ARRAY);

		return $page_slug['slug'];
	}

	public static function getLocalizedPageName($page, $lang = null) {
		$lang = (!$lang) ? $_SESSION['lang'] : $lang;

		//controlla se esiste uno slug per la pagina: se sÃ¬, restituisce quest'ultimo come link; se no, cerca l'alias
		if(SysAliases::getLocalizedSlug($page) != NULL && SysAliases::getLocalizedSlug($page) != '')
			return SysAliases::getLocalizedSlug($page);

		$page_alias = SysAliasesTable::getInstance()->createQuery('a')
				->leftJoin('a.Page')
				->leftJoin('a.Language')
				->where('a.Page.name = ?', $page)
				->andWhere('a.Language.code = ?', $lang)
				->fetchOne(null, Doctrine_Core::HYDRATE_ARRAY);
		return $page_alias['value'];
	}

}